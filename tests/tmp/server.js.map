{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"react-dom/server\"","webpack:///external \"react-helmet\"","webpack:///external \"react-router\"","webpack:///./src/views/ssr.tsx","webpack:///./src/entry/server.tsx","webpack:///./tests/components/root.tsx","webpack:///external \"react-loadable\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","w","s","require","ssr_Html","external_react_","[object Object]","helmet","js","main","window","this","props","assign","lang","prefix","htmlAttributes","toString","title","toComponent","charSet","httpEquiv","content","meta","base","href","link","style","src","script","noscript","bodyAttributes","id","dangerouslySetInnerHTML","__html","map","key","keys","reduce","out","JSON","stringify","server_Loadable","server_Root","default","server_chunks","Map","__webpack_exports__","serverStats","clientStats","preloadAll","mainChunkName","assetsByChunkName","find","endsWith","chunks","forEach","chunk","clientMod","serverMod","identifier","set","concat","filter","files","async","ctx","routeContext","namedModules","webpackModules","server_","Capture","report","moduleName","push","webpackReport","external_react_router_","location","request","url","context","includes","status","redirect","body","reactRender","external_react_helmet_default","a","renderStatic","ids","ext","server_getChunks","type","react__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = require(\"react\");","module.exports = require(\"react-dom/server\");","module.exports = require(\"react-helmet\");","module.exports = require(\"react-router\");","// Server-side HTML render\n\n// Component to render the full HTML response in React\n\n// ----------------------------------------------------------------------------\n// IMPORTS\n\n/* NPM */\nimport * as React from \"react\";\nimport { HelmetData } from \"react-helmet\";\n\n// ----------------------------------------------------------------------------\n\n// Types\n\nexport interface IHtmlProps {\n  helmet: HelmetData;\n  js: string[];\n  main: string;\n  window?: {\n    [key: string]: object;\n  };\n}\n\nexport default class Html extends React.PureComponent<IHtmlProps> {\n    public render() {\n      const { helmet, js, main, window = {} } = this.props;\n      return (\n        <html lang=\"en\" prefix=\"og: http://ogp.me/ns#\" {...helmet.htmlAttributes.toString()}>\n          <head>\n          {helmet.title.toComponent()}\n          <meta charSet=\"utf-8\" />\n          <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n          <meta httpEquiv=\"Content-Language\" content=\"en\" />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n          {helmet.meta.toComponent()}\n          {helmet.base.toString() ? helmet.base.toComponent() : <base href=\"/\" />}\n          {helmet.link.toComponent()}\n          {helmet.style.toComponent()}\n          <script src=\"https://cdn.polyfill.io/v2/polyfill.min.js\" />\n          {helmet.script.toComponent()}\n          {helmet.noscript.toComponent()}\n          </head>\n          <body {...helmet.bodyAttributes.toComponent()}>\n          <div id=\"root\" dangerouslySetInnerHTML={{__html: main}}/>\n          {js.map(src => <script key={src} src={src} />)}\n          <script\n            dangerouslySetInnerHTML={{\n              __html: Object.keys(window).reduce(\n                (out, key) => out += `window.${key}=${JSON.stringify(window[key])};`,\n                \"\",\n              ),\n            }\n          } />\n          </body>\n        </html>\n    );\n  }\n}\n","// ðŸš€ Launch.js - server entrypoint\n\n// ----------------------------------------------------------------------------\n// IMPORTS\n\n/* NPM */\n\n/* WEB SERVER */\n\n// Koa web server\nimport * as koa from \"koa\";\n\n/* REACT */\nimport * as React from \"react\";\n\n// React Router HOC for figuring out the exact React hierarchy to display\n// based on the URL\nimport { StaticRouter } from \"react-router\";\n\n// React utility to transform JSX to HTML (to send back to the client)\nimport * as ReactDOMServer from \"react-dom/server\";\n\n// <Helmet> component for retrieving <head> section, so we can set page\n// title, meta info, etc along with the initial HTML\nimport Helmet from \"react-helmet\";\n\n// Universal rendering\nconst Loadable = require(\"react-loadable\");\n\n/* Local */\n\n// HTML template\nimport Html from \"../views/ssr\";\n\n// ----------------------------------------------------------------------------\n\n// Types\ninterface IRouteContext {\n  status?: number;\n  url?: string;\n}\n\n// Root component, to be merged by Webpack\nconst Root: React.ComponentClass = require(\"__ROOT_ENTRYPOINT\").default;\n\n// Map to cache module chunks by server ID\nconst chunks = new Map<number, string[]>();\n\n// Helper to get chunks by ID\nfunction getChunks(ids: number[], ext = \"js\"): string[] {\n  return ([] as string[]).concat(\n    ...ids.map(id => (chunks.get(id) || []).filter(c => c.endsWith(`.${ext}`))),\n  );\n}\n\nexport default async function(serverStats: any, clientStats: any): Promise<koa.Middleware> {\n  await Loadable.preloadAll();\n\n  // Get the names of the `main` JS + CSS chunks\n  const mainChunkName = clientStats.assetsByChunkName.main.find((c: string) => c.endsWith(\".js\"));\n\n  // Cache server chunks -> client\n  clientStats.chunks.forEach((chunk: any) => {\n    chunk.modules.forEach((clientMod: any) => {\n      const serverMod = serverStats.modules.find((m: any) => m.identifier === clientMod.identifier);\n      if (serverMod) {\n        chunks.set(\n          serverMod.id,\n          [].concat(\n            ...clientMod.chunks\n            .filter((c: string) => typeof c !== null)\n            .map((c: number) => clientStats.chunks[c].files),\n          ),\n        );\n      }\n    });\n  });\n\n  return async function reactMiddleware(ctx) {\n    const routeContext: IRouteContext = {};\n\n    // Modules used to render this route\n    const namedModules: string[] = [];\n    const webpackModules: number[] = [];\n\n    // Generate the \"main\" HTML from our React tree.\n    const main = ReactDOMServer.renderToString(\n      <Loadable.Capture\n        report={(moduleName: string) => namedModules.push(moduleName)}\n        webpackReport={(moduleName: number) => webpackModules.push(moduleName)}>\n        <StaticRouter location={ctx.request.url} context={routeContext}>\n          <Root />\n        </StaticRouter>\n      </Loadable.Capture>,\n    );\n\n    // Handle redirects\n    if ([301, 302].includes(routeContext.status!)) {\n      // 301 = permanent redirect, 302 = temporary\n      ctx.status = routeContext.status!;\n\n      // Issue the new `Location:` header\n      ctx.redirect(routeContext.url!);\n\n      // Return early -- no need to set a response body\n      return;\n    }\n\n    // Handle 404 Not Found\n    if (routeContext.status === 404) {\n      ctx.status = 404;\n      ctx.body = \"Not found\";\n\n      // Return early -- no need to set a response body\n      return;\n    }\n\n    // Render the final HTML\n    const reactRender = ReactDOMServer.renderToString(\n      <Html\n        helmet={Helmet.renderStatic()}\n        js={getChunks(webpackModules).concat(mainChunkName)}\n        main={main}>\n      </Html>,\n    );\n\n    // Set the return type to `text/html`, and send response to client\n    ctx.type = \"text/html\";\n    ctx.body = `<!DOCTYPE html>${reactRender}`;\n  };\n}\n","// ðŸš€ Launch.js - root React component (for testing)\n\n// ----------------------------------------------------------------------------\n// IMPORTS\n\n/* NPM */\nimport * as React from \"react\";\n\n// ----------------------------------------------------------------------------\n\nexport default () => (\n  <h1>Hello from Launch.js!</h1>\n);\n","module.exports = require(\"react-loadable\");"],"sourceRoot":""}